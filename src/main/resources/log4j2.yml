# 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。
Configuration:
  # 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,你会看到log4j2内部各种详细输出
  status: warn
  # log4j2能够自动检测修改配置文件和重新配置本身,设置间隔秒数
  monitorInterval: 60
  # 定义全局变量
  Properties:
    Property:
      - name: log4j.skipJansi
        value: false
      # 缺省配置（用于开发环境）。其他环境需要在VM参数中指定，如下：
      # 测试：-Dlog.level.console=warn -Dlog.level.custom=trace
      # 生产：-Dlog.level.console=warn -Dlog.level.custom=info
      - name: log.level.custom
        value: error
      - name: log.level.console
        value: info
      - name: log.path
        value: log
      - name: project.name
        value: Hx-Warehouse
      - name: log.pattern
        value: "%highlight{%d{yyyy-MM-dd HH:mm:ss.SSS} [%-20thread %X{request-id}] [%-5level]} %-40.40logger{39} - %msg%n"
  Appenders:
    # 控制台日志
    console:
      name: console
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${log.pattern}
      Filters:
        ThresholdFilter:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          - level: info
            onMatch: ACCEPT
            onMismatch: DENY
    # 日志存档
    RollingFile:
      - name: ROLLING_FILE
        fileName: ${log.path}/${project.name}.log
        filePattern: "${log.path}/access/${project.name}/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          # 一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: info
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          # 按天分类
          TimeBasedTriggeringPolicy:
            modulate: true
            interval: 1
          # 按大小分类
          SizeBasedTriggeringPolicy:
            size: 50MB
      # 错误日志
      - name: EXCEPTION_ROLLING_FILE
        ignoreExceptions: false
        fileName: ${log.path}/exception/${project.name}_exception.log
        filePattern: "${log.path}/exception/${project.name}/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log.gz"
        ThresholdFilter:
          level: error
          onMatch: ACCEPT
          onMismatch: DENY
        PatternLayout:
          pattern: ${log.pattern}
        Policies:
          # 按天分类
          TimeBasedTriggeringPolicy:
            modulate: true
            interval: 1
          # 按大小分类
          SizeBasedTriggeringPolicy:
            size: 50MB
  Loggers:
    Root:
      level: all
      AppenderRef:
        - ref: console
        - ref: ROLLING_FILE
        - ref: EXCEPTION_ROLLING_FILE
    Logger:
      - name: exception
        level: debug
        additivity: true
        AppenderRef:
          - ref: EXCEPTION_ROLLING_FILE
      # 监听具体包下面的日志
      # 为指定包配置特殊的Log级别，方便调试
      - name: org.springframework
        level: ${log.level.custom}
        AppenderRef:
          - ref: console
          - ref: ROLLING_FILE
          - ref: EXCEPTION_ROLLING_FILE